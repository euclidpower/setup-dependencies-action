name: Set up and cache Ruby and NodeJS
description: Setting up and caching dependencies of euclidpower/webapp
inputs:
  cache_playwright:
    description: Should Cache Playwright binaries
    required: false
    default: "0"
runs:
  using: composite
  steps:
    # The ruby/setup-ruby action excepts this file to be located in the working directory,
    # so to avoid having it duplicated in the repo, we copy it during build time
    - run: cp ${{ github.workspace }}/.ruby-version ./rails/
      shell: bash

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        working-directory: ./rails/

    - run: corepack enable
      shell: bash

    - uses: actions/setup-node@v4
      with:
        node-version-file: package.json
        cache: 'yarn'

    - name: 'Get Playwright version from package.json'
      if: inputs.cache_playwright != '0'
      id: get-playwright-version
      shell: bash
      run: |
        PLAYWRIGHT_VERSION=`jq '.dependencies["@playwright/test"]' package.json`
        if [[ "$PLAYWRIGHT_VERSION" == "null" ]] || [[ -z "$PLAYWRIGHT_VERSION" ]]; then
          echo "Failed to locate Playwright version"
          exit 1
        fi

        echo "Current Playwright version: $PLAYWRIGHT_VERSION"
        echo playwright-version='$PLAYWRIGHT_VERSION' >> "$GITHUB_OUTPUT"

    - run: yarn install --immutable
      shell: bash

    - name: Cache Playwright binaries
      if: inputs.cache_playwright != '0' && steps.get-playwright-version.outputs.playwright-version != ''
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ $PLAYWRIGHT_VERSION }}

    - name: Download Playwright dependencies and browsers
      if: steps.get-playwright-version.outputs.playwright-version != '' && steps.playwright-cache.outputs.cache-hit != 'true'
      run: yarn playwright install --with-deps chromium
      shell: bash
