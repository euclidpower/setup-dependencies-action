name: Set up and cache Ruby and NodeJS
description: Setting up and caching dependencies of euclidpower/webapp
inputs:
  cache_playwright:
    description: Should Cache Playwright binaries
    required: false
    default: "0"
  playwright_version:
    description: The version we are using
    required: false
    default: "1.53.0"
runs:
  using: composite
  steps:
    # The ruby/setup-ruby action excepts this file to be located in the working directory,
    # so to avoid having it duplicated in the repo, we copy it during build time
    - run: cp ${{ github.workspace }}/.ruby-version ./rails/
      shell: bash

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        working-directory: ./rails/

    - run: corepack enable
      shell: bash

    - uses: actions/setup-node@v4
      with:
        node-version-file: package.json
        cache: 'yarn'

    - run: yarn install --immutable
      shell: bash

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Get the current gradle distribution
      id: get-gradle-dist
      shell: bash
      run: |
        GRADLE_DIST=$(sed -E -n 's/distributionUrl=.*\/(gradle-.*.zip)/\1/p' ./ktserver/gradle/wrapper/gradle-wrapper.properties)
        if [[ -z "$GRADLE_DIST" ]]; then
          echo "Failed to locate the current gradle distribution"
          exit 1
        fi
        echo "Found gradle distribution: $GRADLE_DIST"
        echo gradle-dist="$GRADLE_DIST" >> "$GITHUB_OUTPUT"

    - name: Gradle cache
      uses: actions/cache@v4
      id: gradle-cache
      with:
        path: ~/.gradle/wrapper/dists/
        key: ${{ runner.os }}-${{ steps.get-gradle-dist.outputs.gradle-dist }}

    - name: Download Gradle distribution
      if: steps.gradle-cache.outputs.cache-hit != 'true'
      run: ./gradlew tasks
      working-directory: ./ktserver/
      shell: bash

    - name: Cache Playwright binaries
      if: inputs.cache_playwright != '0'
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ inputs.playwright_version }}

    - name: Download Playwright dependencies and browsers
      if: inputs.cache_playwright != '0' && steps.playwright-cache.outputs.cache-hit != 'true'
      run: yarn playwright install --with-deps chromium
      shell: bash
